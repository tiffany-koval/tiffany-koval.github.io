import"./faceplate-switch-input-41e8fecd.js";import{_ as e,n as t,e as s,bl as n,fp as i,aD as a,aE as o,fq as r,bn as l,fr as c,fs as d,ft as h,fu as p,W as u,e1 as y,r as m,q as b,a as v,e7 as f,t as k,e9 as C}from"./shell-091aa980.js";import{s as g,x}from"./icon-bd54b9fa.js";import{u as w}from"./community-colors-e0623463.js";import{D as E}from"./display-theme-7e251d41.js";import{s as T}from"./translations-280043f0.js";import"./checked-input-element-a967e016.js";import"./faceplate-input-1d78f8a0.js";import"./input-element-422d9934.js";import"./form-common-utils-52bc3cfc.js";let j=class extends g{constructor(){super(...arguments),this.enabled=!1,this.country=""}handler(e){e.preventDefault(),n({country:this.country,name:i,value:this.enabled?"false":"true"}),window.location.reload()}render(){return x`<div @click="${this.handler}" @keypress="${this.handler}"> <slot></slot> </div>`}};e([t({type:Boolean})],j.prototype,"enabled",void 0),e([t({type:String})],j.prototype,"country",void 0),j=e([s("shreddit-modmode-setter")],j);let S=class extends g{constructor(){super(...arguments),this.enabled=!1,this.country="",this.cookieDomain="",this.sync=!1}async connectedCallback(){super.connectedCallback(),this.sync&&this.syncCookieToUserPreference()}async syncCookieToUserPreference(){try{const{data:e}=await a({operation:o.IdentityUserPreferences,variables:{includeNightMode:!0}}),t=e.identity?.preferences?.isNightModeEnabled;if(null==t)return;t!==this.enabled&&(this.enabled=t,this.updateClientStyles(),this.setCookie(),this.reportMismatch())}catch{}}setCookie(){n({country:this.country,name:r,value:this.enabled?E.Darkmode:E.Lightmode,options:{...l,domain:this.cookieDomain||void 0}})}async setUserPreference(){await a({operation:o.UpdateAccountPreferences,variables:{input:{isNightModeEnabled:this.enabled}}})}updateClientStyles(){w({isDarkMode:this.enabled});const e=this.querySelector("faceplate-switch-input");e&&(e.checked=this.enabled)}reportMismatch(){const e=c(this.country)&&!d(),t={cookies_enabled:navigator.cookieEnabled&&!e?"true":"false"};h({type:p.Counter,name:"shreddit_darkmode_preference_mismatches",value:1,labels:t})}async handler(e){e.preventDefault(),this.enabled=!this.enabled,this.updateClientStyles(),this.setCookie(),await this.setUserPreference()}handleKeypress(e){"Enter"!==e.key&&"Space"!==e.key||this.handler(e)}render(){return x`<div @click="${this.handler}" @keypress="${this.handleKeypress}"> <community-colors></community-colors> <slot></slot> </div>`}};e([t({type:Boolean,reflect:!0})],S.prototype,"enabled",void 0),e([t({type:String})],S.prototype,"country",void 0),e([t({type:String,attribute:"cookie-domain"})],S.prototype,"cookieDomain",void 0),e([t({type:Boolean})],S.prototype,"sync",void 0),S=e([s("shreddit-darkmode-setter")],S);let D=class extends(u(g)){constructor(){super(...arguments),this.translationContextValue=y,this.pubsub=new m(this)}updateTranslationSetting(e){const t=new CustomEvent("update-translation-context",{bubbles:!0,composed:!0,detail:{...this.translationContextValue,isTranslationActive:e}});this.dispatchEvent(t),this.pubsub.publish(b.I18nPostTranslationOverride,{isContextUpdateEvent:!0,isTranslationActive:e,id:""})}async handleEvent(e){e.preventDefault(),this.trackEvent(T({isImmersiveTranslationsActive:!this.translationContextValue.isTranslationActive})),this.updateTranslationSetting(!this.translationContextValue.isTranslationActive)}handleKeypress(e){"Enter"!==e.key&&"Space"!==e.key||this.handleEvent(e)}render(){return x`<div data-testid="translation-setting-click-setter-button" @click="${this.handleEvent}" @keypress="${this.handleKeypress}" class="flex justify-between items-center pr-md cursor-pointer hover:bg-neutral-background-hover" tabindex="0" role="button" arial-label="Translation setting"> <slot></slot> <faceplate-switch-input data-testid="translation-setting-click-setter-switch-input" class="m-0 [&_label]:hidden" ?checked="${!!this.translationContextValue.isTranslationActive}" name="translation-settings-list-input"></faceplate-switch-input> </div>`}};D.styles=[v],e([f({context:C,subscribe:!0}),k()],D.prototype,"translationContextValue",void 0),D=e([s("translation-setting-click-setter")],D);
//# sourceMappingURL=user-drawer-client-js-0a126fc3.js.map
